# pylint: skip-file
"""Create tables

Revision ID: d4a1e9ce2a59
Revises: 
Create Date: 2024-10-11 01:31:33.044354

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd4a1e9ce2a59'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('macronutrientsId', sa.Integer(), nullable=True),
    sa.Column('micronutrientsId', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nutritionalInfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('carbohydrates', sa.Integer(), nullable=True),
    sa.Column('proteins', sa.Integer(), nullable=True),
    sa.Column('fats', sa.Integer(), nullable=True),
    sa.Column('vitamins', sa.String(length=50), nullable=True),
    sa.Column('minerals', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roleName', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cc', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('lastName', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phoneNumber', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weeklyMenu',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('adminId', sa.Integer(), nullable=True),
    sa.Column('weeklyMenuId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adminId'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weeklyMenuId'], ['weeklyMenu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredient',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('foodId', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('measurementUnit', sa.String(length=50), nullable=True),
    sa.Column('expirationDate', sa.String(length=50), nullable=True),
    sa.Column('meassure', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['foodId'], ['food.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('weeklyMenuId', sa.Integer(), nullable=True),
    sa.Column('day', sa.String(length=10), nullable=True),
    sa.Column('hour', sa.String(length=20), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['weeklyMenuId'], ['weeklyMenu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menuHistory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('weeklyMenuId', sa.Integer(), nullable=True),
    sa.Column('dateCreated', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weeklyMenuId'], ['weeklyMenu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=50), nullable=True),
    sa.Column('dateSent', sa.String(length=20), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('typeOfFood', sa.String(length=50), nullable=True),
    sa.Column('preparationTime', sa.Integer(), nullable=True),
    sa.Column('nutritionalInfoId', sa.Integer(), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.Column('preparationProcess', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['nutritionalInfoId'], ['nutritionalInfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userPreferences',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('dietaryRestrictions', sa.String(length=50), nullable=True),
    sa.Column('preferredCuisines', sa.String(length=50), nullable=True),
    sa.Column('allergens', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recipeId', sa.Integer(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('datePosted', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['recipeId'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favoriteRecipe',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('recipeId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipeId'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('userId', 'recipeId')
    )
    op.create_table('groupMembers',
    sa.Column('groupId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['groupId'], ['group.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('groupId', 'userId')
    )
    op.create_table('menuRecipe',
    sa.Column('menuId', sa.Integer(), nullable=False),
    sa.Column('recipeId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menuId'], ['menu.id'], ),
    sa.ForeignKeyConstraint(['recipeId'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('menuId', 'recipeId')
    )
    op.create_table('pantry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('ingredientIds', sa.Integer(), nullable=True),
    sa.Column('dateLastUpdated', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['ingredientIds'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchaseHistory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('ingredientsId', sa.Integer(), nullable=True),
    sa.Column('purchaseDate', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['ingredientsId'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipeIngredient',
    sa.Column('recipeId', sa.Integer(), nullable=False),
    sa.Column('ingredientId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ingredientId'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['recipeId'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('recipeId', 'ingredientId')
    )
    op.create_table('recipeSuggestion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('suggestedRecipeId', sa.Integer(), nullable=True),
    sa.Column('matchedIngredientId', sa.Integer(), nullable=True),
    sa.Column('missingIngredientesId', sa.Integer(), nullable=True),
    sa.Column('dateSuggested', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['matchedIngredientId'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['missingIngredientesId'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['suggestedRecipeId'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shoppingList',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('ingredientId', sa.Integer(), nullable=True),
    sa.Column('dateCreated', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['ingredientId'], ['ingredient.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('store',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=20), nullable=True),
    sa.Column('inventoryId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inventoryId'], ['pantry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('store')
    op.drop_table('shoppingList')
    op.drop_table('recipeSuggestion')
    op.drop_table('recipeIngredient')
    op.drop_table('purchaseHistory')
    op.drop_table('pantry')
    op.drop_table('menuRecipe')
    op.drop_table('groupMembers')
    op.drop_table('favoriteRecipe')
    op.drop_table('comment')
    op.drop_table('userPreferences')
    op.drop_table('recipe')
    op.drop_table('notification')
    op.drop_table('menuHistory')
    op.drop_table('menu')
    op.drop_table('ingredient')
    op.drop_table('group')
    op.drop_table('weeklyMenu')
    op.drop_table('user')
    op.drop_table('roles')
    op.drop_table('nutritionalInfo')
    op.drop_table('measure')
    op.drop_table('food')
    # ### end Alembic commands ###
